[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "radiopyo"
version = "0.4.1"
authors = [{ name = "Romain Tonneau", email = "romain.tonneau@unamur.be" }]
description = "A small module to perform FLASH simulations with resolution of ODE's"
readme = "README.md"
requires-python = ">=3.9"
license = "LGPL-3.0-only"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
dependencies = [
  "pandas>=1.5.3",
  "pandas-stubs>=1.5.3",
  "numpy>=1.24.3",
  "scipy>=1.10.1",
  "mypy",
  "lark>=1.1.2",
  "more-itertools",
]

[project.urls]
"Source" = "https://gitlab.unamur.be/rtonneau/radiopyo"

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
parser = "python tests/parser.py"
export_env = 'conda env export -n radiobio  | findstr -v "prefix pip radiopyo" > .env/radiobio.yaml'
import_env = 'conda env create --file .env/radiobio.yaml'
clean_env = 'conda env remove -n radiobio'

# [tool.hatch.build.targets.wheel.hooks.mypyc]
# dependencies = ["hatch-mypyc"]

[tool.hatch.build]
exclude = [".env", ".vscode", "tests", "doc"]

[tool.hatch.build.targets.wheel]
packages = ["radiopyo"]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]


[tool.mypy]
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = false
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = true
exclude = "tests"

[tool.ruff]
extend-exclude = ["tests/"]
extend-select = [
  "B",
  "BLE",
  "C4",
  "ERA",
  "I",
  "ICN",
  "INP",
  "ISC",
  "N",
  "NPY",
  "PGH",
  "PIE",
  # "PTH",
  "Q",
  "RET",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "T20",
  "TCH",
  "TID",
  "YTT",
]
ignore = [
  "E402",
  "B905",
  "N818",
  "S101",
  "N815",
  "N803",
  "N806",
  "N802",
  "E731",
  "TCH005",
]
show-fixes = true
target-version = "py39"

[tool.logging]
version = 1
disable_existing_loggers = true

[tool.logging.filters]

[tool.logging.formatters.formatter]
format = "%(asctime)s::%(name)s::%(levelname)s::%(message)s"

[tool.logging.filters.InfoOnly]
class = "radiopyo.utils.logging.InfoOnly"

[tool.logging.handlers.info_handler]
class = "radiopyo.utils.logging.InfoHandler"
formatter = "formatter"
stream = "ext://sys.stdout"
level = "INFO"

[tool.logging.handlers.err_console]
class = "logging.StreamHandler"
formatter = "formatter"
stream = "ext://sys.stderr"
level = "ERROR"

[tool.logging.loggers.radiopyo]
level = "DEBUG"
handlers = ["info_handler", "err_console"]
